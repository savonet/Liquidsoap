; Regenerate using dune build @gendune --auto-promote

(include dune.inc)

(executable
 (name gen_dune)
 (modules gen_dune))

(rule
 (alias gendune)
 (deps (source_tree .))
 (target dune.inc.gen)
 (action
  (with-stdout-to
   dune.inc.gen
   (run ./gen_dune.exe))))

(rule
 (alias gendune)
 (action
  (diff dune.inc dune.inc.gen)))

(rule
 (target first-concat.mp4)
 (action
  (run ffmpeg -f lavfi -i "testsrc=duration=20:size=1280x720:rate=30" -vf "setpts=N+1235" %{target})))

(rule
 (target second-concat.mp4)
 (action
  (run ffmpeg -f lavfi -i "testsrc=duration=30:size=1280x720:rate=30" -vf "setpts=N+756" %{target})))

(rule
 (target third-concat.mp4)
 (action
  (run ffmpeg -f lavfi -i "testsrc=duration=10:size=1280x720:rate=30" -vf "setpts=N+245" %{target})))

(rule
 (target background.jpg)
 (action
  (run ffmpeg -f lavfi -i testsrc=size=1280x720 -t 1 -f mjpeg %{target})))

(rule
 (target logo.png)
 (action
  (run ffmpeg -f lavfi -i testsrc=size=50x50 -t 1 -f mjpeg %{target})))

(rule
 (alias runtest)
 (package liquidsoap)
 (deps
  all_media_files
  first-concat.mp4
  second-concat.mp4
  third-concat.mp4
  background.jpg
  logo.png
  test_ffmpeg_copy_concat.liq
  test_ffmpeg_complex_filter.liq
  test_ffmpeg_transparency_filter.liq
  (:liquidsoap ../../src/bin/liquidsoap.exe)
  (source_tree ../../libs)
  (:stdlib ../../libs/stdlib.liq)
  (:test_liq ../test.liq)
  (:run_test ../run_test.sh))
 (action
  (progn
    (run %{run_test} "%{liquidsoap} --no-stdlib %{stdlib} %{test_liq} -" test_ffmpeg_copy_concat.liq "FFmpeg copy+concat")
    (run %{run_test} "%{liquidsoap} --no-stdlib %{stdlib} %{test_liq} -" test_ffmpeg_complex_filter.liq "FFmpeg complex filter")
    (run %{run_test} "%{liquidsoap} --no-stdlib %{stdlib} %{test_liq} -" test_ffmpeg_transparency_filter.liq "FFmpeg transparency filter"))))

