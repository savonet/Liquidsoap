(include_subdirs unqualified)

(executable
 (name decoder_test)
 (modules decoder_test)
 (libraries liquidsoap_core))

(executable
 (name frame_test)
 (modules frame_test)
 (libraries liquidsoap_core))

(executable
 (name parsesrt)
 (modules parsesrt)
 (libraries liquidsoap_core))

(executable
 (name generator_test)
 (modules generator_test)
 (libraries liquidsoap_core))

(executable
 (name start_stop_test)
 (modules start_stop_test)
 (libraries liquidsoap_core))

(executable
 (name is_url)
 (modules is_url)
 (libraries liquidsoap_core))

(executable
 (name meth)
 (modules meth)
 (libraries liquidsoap_core))

(executable
 (name playlist_basic_test)
 (modules playlist_basic_test)
 (libraries liquidsoap_core))

(executable
 (name readavi)
 (modules readavi)
 (libraries liquidsoap_core))

(executable
 (name source_test)
 (modules source_test)
 (libraries liquidsoap_core))

(executable
 (name stream_decoder_test)
 (modules stream_decoder_test)
 (libraries liquidsoap_core liquidsoap_ffmpeg liquidsoap_lame))

(executable
 (name strings_test)
 (modules strings_test)
 (libraries liquidsoap_core))

(executable
 (name string_test)
 (modules string_test)
 (libraries liquidsoap_core))

(executable
 (name taglib_test)
 (modules taglib_test)
 (libraries liquidsoap_core liquidsoap_taglib))

(executable
 (name timezone)
 (modules timezone)
 (libraries liquidsoap_core))

(executable
 (name types)
 (modules types)
 (libraries liquidsoap_core))

(executable
 (name unifier_test)
 (modules unifier_test)
 (libraries liquidsoap_core))

(executable
 (name utils_test)
 (modules utils_test)
 (libraries liquidsoap_core))

(executable
 (name version_test)
 (modules version_test)
 (libraries liquidsoap_core))

(executable
 (name json_test)
 (modules json_test)
 (libraries liquidsoap_core))

(rule
 (target test.wav)
 (action
  (run ffmpeg -f lavfi -i "sine=frequency=440:duration=5" -ac 2 %{target})))

(rule
  (target test.mp3)
  (action
    (run ffmpeg -f lavfi -i "sine=frequency=440:duration=5" -ac 2 %{target}))) 

(rule
  (target json)
  (action (progn
    (run rm -rf json)
    (run git clone --depth 1 https://github.com/nst/JSONTestSuite json)
    (system "cd json && mv test_parsing/*.json .")
    (system "cd json && find . -maxdepth 1 -type d | grep -v '^\\.$' | xargs rm -rf"))))

(rule
  (target json5)
  (action (progn
    (run rm -rf json5)
    (run git clone --depth 1 https://github.com/json5/json5-tests.git json5)
    (system "cd json5 && find . -type f | egrep '\\.json|\\.js|\\.txt' | xargs -I % mv % .")
    (system "cd json5 && find . -type d | grep -v '^\\.$' | xargs rm -rf")))) 
      

(rule
 (alias runtest)
 (package liquidsoap)
 (deps
  (:decoder_test ./decoder_test.exe)
  (:frame_test ./frame_test.exe)
  (:generator_test ./generator_test.exe)
  (:start_stop_test ./start_stop_test.exe)
  (:is_url ./is_url.exe)
  (:meth ./meth.exe)
  (:playlist_basic_test ./playlist_basic_test.exe)
  (:parsesrt ./parsesrt.exe)
  (:readavi ./readavi.exe)
  (:source_test ./source_test.exe)
  (:stream_decoder_test ./stream_decoder_test.exe)
  (:strings_test ./strings_test.exe)
  (:string_test ./string_test.exe)
  (:taglib_test ./taglib_test.exe)
  (:timezone ./timezone.exe)
  (:types ./types.exe)
  (:unifier_test ./unifier_test.exe)
  (:utils_test ./utils_test.exe)
  (:version_test ./version_test.exe)
  (:json_test ./json_test.exe)
  (:json ./json)
  (:json5 ./json5)
  (:test_wav ./test.wav)
  (:test_mp3 ./test.mp3)
  (:test_srt ./test.srt))
 (action
  (progn
   (run %{decoder_test})
   (run %{frame_test})
   (run %{generator_test})
   (run %{start_stop_test})
   (run %{is_url})
   (run %{meth})
   (run %{playlist_basic_test})
   (run %{parsesrt} %{test_srt})
   (run %{readavi})
   (run %{source_test})
   (run %{stream_decoder_test} %{test_wav} bla.wav)
   (run %{stream_decoder_test} %{test_mp3} bla.wav)
   (run %{strings_test})
   (run %{string_test})
   (run %{taglib_test})
   (run %{timezone})
   (run %{types})
   (run %{unifier_test})
   (run %{json_test})
   (run %{utils_test})
   (run %{version_test}))))
